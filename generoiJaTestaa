import java.util.Random;

public class generoiJaTestaa{
    static Random r = null;
    
    public static void main(String[] args){
        r = new Random();
        
        
        for (int i=0; i<10; i++){
            testaa();
        }
    } // Starting here;
    
public static void testaa(){
  try{
    int luku = generoi();
    System.out.println(luku);
  } catch (VillePoikkeus a){
  System.out.println("VillePoikkeus!");
  }catch (MinttuPoikkeus a){
  System.out.println("MinttuPoikkeus!");
  }catch (KallePoikkeus a){
  System.out.println("KallePoikkeus!");
  }
}

/*
Oheisessa ohjelmassa on määritelty metodi generoi(), joka 
  palauttaa kokonaisluvun.
Jos metodin suorituksessa jokin menee pieleen, se heittää 
  yhden kolmesta mahdollisesta poikkeuksesta:

VillePoikkeus, MinttuPoikkeus tai KallePoikkeus.

Tehtäväsi on kirjoittaa metodi testaa(), joka kutsuu generoi-metodia ja tulostaa
- metodin palauttaman kokonaisluvun, jos virhettä ei tapahtunut, TAI
- merkkijonon VillePoikkeus!, KallePoikkeus! tai MinttuPoikkeus!, jos metodi 
  heitti tällaisen poikkeuksen.
*/
    
    public static int generoi() throws VillePoikkeus, MinttuPoikkeus, KallePoikkeus {
        
        int n = r.nextInt(4);
        switch (n){
            case 0:
                return 50 - r.nextInt(100);
            case 1:
                throw new VillePoikkeus();
            case 2:
                throw new MinttuPoikkeus();
            case 3:
                throw new KallePoikkeus();
        }
        // ei mahdollinen, mutta kääntäjä vaatii tämän
        return -1;
    }
}

class VillePoikkeus extends Exception {}
class KallePoikkeus extends Exception {}
class MinttuPoikkeus extends Exception {}
